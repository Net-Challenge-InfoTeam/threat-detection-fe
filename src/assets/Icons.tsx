import colorSet from "src/styles/colorSet";

interface IconsProps {
  size?: React.CSSProperties["width"];
  color?: React.CSSProperties["color"];
}

const Icons = ({}: IconsProps) => {
  return;
};

const Caution = ({ size = "20px", color = "white" }: IconsProps) => {
  return (
    <svg
      width={size}
      height={size}
      viewBox="0 0 20 20"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <g id="Iconly/Bold/Danger">
        <g id="Danger">
          <path
            id="Danger_2"
            fillRule="evenodd"
            clipRule="evenodd"
            d="M12.0643 3.70174L18.1216 14.2143C18.255 14.5281 18.3133 14.7833 18.3299 15.0484C18.3633 15.6677 18.1466 16.2696 17.7217 16.7329C17.2968 17.1945 16.7219 17.467 16.097 17.5H3.89905C3.64076 17.4843 3.38247 17.4257 3.14084 17.3349C1.93271 16.8477 1.34948 15.4769 1.84106 14.2887L7.94003 3.69431C8.14833 3.3219 8.46494 3.00068 8.85654 2.79424C9.98969 2.16585 11.4311 2.57872 12.0643 3.70174ZM10.7229 10.6298C10.7229 11.0261 10.398 11.3573 9.99802 11.3573C9.59809 11.3573 9.26481 11.0261 9.26481 10.6298V8.29373C9.26481 7.89654 9.59809 7.57533 9.99802 7.57533C10.398 7.57533 10.7229 7.89654 10.7229 8.29373V10.6298ZM9.99802 14.1813C9.59809 14.1813 9.26481 13.8502 9.26481 13.4547C9.26481 13.0575 9.59809 12.7272 9.99802 12.7272C10.398 12.7272 10.7229 13.05 10.7229 13.4456C10.7229 13.8502 10.398 14.1813 9.99802 14.1813Z"
            fill={color}
          />
        </g>
      </g>
    </svg>
  );
};

const Safe = ({ size = "20px", color = colorSet.secondary }: IconsProps) => {
  return (
    <svg
      width={size}
      height={size}
      viewBox="0 0 20 20"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M9.7734 18.2614C9.86569 18.3096 9.96888 18.3341 10.0721 18.3333C10.1753 18.3325 10.2776 18.3071 10.3707 18.2581L13.344 16.6687C14.1871 16.2193 14.8474 15.7167 15.3625 15.1316C16.4825 13.8568 17.0941 12.2298 17.0832 10.5522L17.0479 5.01831C17.0446 4.38092 16.6259 3.81217 16.0068 3.60542L10.4756 1.74963C10.1425 1.63686 9.7776 1.63931 9.45041 1.75535L3.94019 3.67733C3.32441 3.89225 2.91332 4.46508 2.91668 5.10329L2.95191 10.6331C2.96282 12.3132 3.59539 13.9328 4.73384 15.1945C5.25399 15.7715 5.92011 16.2667 6.77248 16.7088L9.7734 18.2614ZM8.9863 11.7574C9.11046 11.8767 9.27154 11.9356 9.43262 11.9339C9.5937 11.9331 9.75393 11.8727 9.87642 11.7517L13.1257 8.5484C13.3698 8.30734 13.3673 7.92 13.1206 7.6822C12.8731 7.44441 12.4746 7.44604 12.2305 7.68711L9.42339 10.454L8.27403 9.34923C8.02654 9.11143 7.62888 9.11389 7.3839 9.35495C7.13977 9.59602 7.14229 9.98335 7.38978 10.2212L8.9863 11.7574Z"
        fill={color}
      />
    </svg>
  );
};

const Threat = ({ size = "20px", color = "white" }: IconsProps) => {
  return (
    <svg
      width={size}
      height={size}
      viewBox="0 0 20 20"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <g id="Iconly/Bold/Shield Fail">
        <g id="Shield Fail">
          <path
            id="Shield Fail_2"
            fillRule="evenodd"
            clipRule="evenodd"
            d="M16.0012 3.60722C16.6219 3.81151 17.0413 4.38434 17.0413 5.02173L17.0832 10.5531C17.0916 12.2283 16.4793 13.8544 15.3554 15.13C14.8438 15.7184 14.1812 16.2169 13.3424 16.6663L10.3649 18.2598C10.2726 18.3088 10.172 18.3333 10.0714 18.3333C9.9707 18.3333 9.86167 18.3088 9.76941 18.2598L6.76673 16.7072C5.91961 16.2659 5.25701 15.7756 4.73699 15.1954C3.59631 13.937 2.95887 12.3108 2.95048 10.6356L2.91693 5.10263C2.90855 4.46524 3.32791 3.89404 3.94019 3.68076L9.45069 1.75307C9.77779 1.63785 10.1385 1.63785 10.4739 1.75307L16.0012 3.60722ZM12.0172 11.7388C12.2605 11.5018 12.2605 11.1096 12.0172 10.8726L10.8849 9.76863L12.0172 8.66628C12.2605 8.4293 12.2605 8.04523 12.0172 7.79927C11.774 7.56229 11.3714 7.56229 11.1282 7.79927L9.99587 8.90325L8.86357 7.79927C8.62034 7.56229 8.22613 7.56229 7.97451 7.79927C7.73128 8.04523 7.73128 8.4293 7.97451 8.66628L9.10681 9.76863L7.97451 10.8726C7.73128 11.1096 7.73128 11.5018 7.97451 11.7388C8.10032 11.8614 8.25968 11.9178 8.41904 11.9178C8.58679 11.9178 8.74615 11.8614 8.86357 11.7388L9.99587 10.6356L11.1282 11.7388C11.254 11.8614 11.4133 11.9178 11.5727 11.9178C11.732 11.9178 11.8998 11.8614 12.0172 11.7388Z"
            fill={color}
          />
        </g>
      </g>
    </svg>
  );
};

const Camera = ({ size = "44px", color = "white" }: IconsProps) => {
  return (
    <svg
      width={size}
      height={size}
      viewBox="0 0 44 44"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <g id="Iconly/Bold/Camera">
        <g id="Camera">
          <path
            id="Camera_2"
            fillRule="evenodd"
            clipRule="evenodd"
            d="M31.9734 11.4334C32.0467 11.5616 32.175 11.6532 32.34 11.6532C36.74 11.6532 40.3334 15.2425 40.3334 19.6376V30.5155C40.3334 34.9107 36.74 38.5 32.34 38.5H11.66C7.24169 38.5 3.66669 34.9107 3.66669 30.5155V19.6376C3.66669 15.2425 7.24169 11.6532 11.66 11.6532C11.8067 11.6532 11.9534 11.5799 12.0084 11.4334L12.1184 11.2137C12.1816 11.0806 12.2464 10.9439 12.3123 10.8052C12.7813 9.81734 13.3002 8.72445 13.6217 8.08213C14.465 6.43396 15.895 5.51831 17.6734 5.5H26.3084C28.0867 5.51831 29.535 6.43396 30.3784 8.08213C30.6671 8.65898 31.107 9.58816 31.531 10.4837C31.6185 10.6686 31.7053 10.852 31.79 11.0305L31.9734 11.4334ZM30.635 18.4656C30.635 19.3812 31.3684 20.1138 32.285 20.1138C33.2017 20.1138 33.9534 19.3812 33.9534 18.4656C33.9534 17.5499 33.2017 16.7991 32.285 16.7991C31.3684 16.7991 30.635 17.5499 30.635 18.4656ZM18.8284 21.3041C19.69 20.4434 20.8084 19.9856 22 19.9856C23.1917 19.9856 24.31 20.4434 25.1534 21.2858C25.9967 22.1282 26.455 23.2453 26.455 24.4356C26.4367 26.8896 24.4567 28.8857 22 28.8857C20.8084 28.8857 19.69 28.4279 18.8467 27.5855C18.0034 26.7431 17.545 25.626 17.545 24.4356V24.4173C17.5267 23.2636 17.985 22.1465 18.8284 21.3041ZM27.0784 29.5266C25.7767 30.8269 23.98 31.6326 22 31.6326C20.075 31.6326 18.2784 30.8818 16.9034 29.5266C15.5467 28.1532 14.795 26.3585 14.795 24.4356C14.7767 22.5311 15.5284 20.7364 16.885 19.3629C18.26 17.9895 20.075 17.2386 22 17.2386C23.925 17.2386 25.74 17.9895 27.0967 19.3446C28.4534 20.7181 29.205 22.5311 29.205 24.4356C29.1867 26.4317 28.38 28.2264 27.0784 29.5266Z"
            fill={color}
          />
        </g>
      </g>
    </svg>
  );
};

const Location = ({ size = "20px", color = colorSet.primary }: IconsProps) => {
  return (
    <svg
      width={size}
      height={size}
      viewBox="0 0 22 22"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M11 7C8.79 7 7 8.79 7 11C7 13.21 8.79 15 11 15C13.21 15 15 13.21 15 11C15 8.79 13.21 7 11 7ZM19.94 10C19.48 5.83 16.17 2.52 12 2.06V0H10V2.06C5.83 2.52 2.52 5.83 2.06 10H0V12H2.06C2.52 16.17 5.83 19.48 10 19.94V22H12V19.94C16.17 19.48 19.48 16.17 19.94 12H22V10H19.94ZM11 18C7.13 18 4 14.87 4 11C4 7.13 7.13 4 11 4C14.87 4 18 7.13 18 11C18 14.87 14.87 18 11 18Z"
        fill={color}
      />
    </svg>
  );
};

const MyLocation = () => {
  return (
    <svg
      width="25"
      height="39"
      viewBox="0 0 25 39"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <circle cx="12.5001" cy="12.2955" r="11.3636" fill="#108ED5" />
      <path
        d="M12.5 39L1.67469 15.9886L23.3253 15.9886L12.5 39Z"
        fill="#108ED5"
      />
      <circle cx="12.4999" cy="12.2955" r="5.68182" fill="white" />
    </svg>
  );
};

const OtherLocation = () => {
  return (
    <svg
      width="25"
      height="39"
      viewBox="0 0 25 39"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <circle cx="12.5001" cy="12.2955" r="11.3636" fill="#FF4646" />
      <path
        d="M12.5 39L1.67469 15.9886L23.3253 15.9886L12.5 39Z"
        fill="#FF4646"
      />
      <circle cx="12.4999" cy="12.2955" r="5.68182" fill="white" />
    </svg>
  );
};

const Navigation = ({
  size = "20px",
  color = colorSet.secondaryText,
}: IconsProps) => {
  return (
    <svg
      width={size}
      height={size}
      viewBox="0 0 22 22"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M19.6493 2.36674C19.1907 1.89613 18.5121 1.72081 17.8794 1.90536L3.12416 6.19615C2.45655 6.38162 1.98336 6.91405 1.85589 7.59042C1.72567 8.2788 2.18052 9.15264 2.77477 9.51805L7.38841 12.3537C7.8616 12.6443 8.47235 12.5714 8.86393 12.1765L14.147 6.86053C14.4129 6.5837 14.8531 6.5837 15.1191 6.86053C15.385 7.12813 15.385 7.56182 15.1191 7.83864L9.82682 13.1555C9.43433 13.5495 9.36096 14.1632 9.64983 14.6393L12.4688 19.2992C12.799 19.8529 13.3675 20.1666 13.9911 20.1666C14.0645 20.1666 14.147 20.1666 14.2204 20.1574C14.9357 20.0651 15.5042 19.576 15.7151 18.884L20.0894 4.14764C20.282 3.52017 20.1078 2.83734 19.6493 2.36674Z"
        fill={color}
      />
    </svg>
  );
};

const Knife = ({
  size = "20px",
  color = colorSet.secondaryText,
}: IconsProps) => {
  return (
    <svg
      width={size}
      height={size}
      viewBox="0 0 16 16"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M5.77137 7.65685L9.5426 3.88562C10.3723 3.05595 12.4842 3.05595 13.7852 4.35702L4.35716 13.7851L3.17864 12.6066L6.94988 8.83536L5.77137 7.65685Z"
        fill={color}
      />
    </svg>
  );
};

const CloseThin = ({
  size = "20px",
  color = colorSet.secondaryText,
}: IconsProps) => {
  return (
    <svg
      width={size}
      height={size}
      viewBox="0 0 18 18"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path d="M1 1L17 17M17 1L1 17" stroke={color} />
    </svg>
  );
};

const CloseThick = ({
  size = "20px",
  color = colorSet.secondaryText,
}: IconsProps) => {
  return (
    <svg
      width={size}
      height={size}
      viewBox="0 0 14 14"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path d="M1 1L13 13M13 1L1 13" stroke={color} strokeWidth="2" />
    </svg>
  );
};

const Car = ({ size = "20px", color = colorSet.secondaryText }: IconsProps) => {
  return (
    <svg
      width={size}
      height={size}
      viewBox="0 0 20 20"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M15.7667 5.00841C15.6 4.51675 15.1333 4.16675 14.5833 4.16675H5.41667C4.86667 4.16675 4.40833 4.51675 4.23333 5.00841L2.5 10.0001V16.6667C2.5 17.1251 2.875 17.5001 3.33333 17.5001H4.16667C4.625 17.5001 5 17.1251 5 16.6667V15.8334H15V16.6667C15 17.1251 15.375 17.5001 15.8333 17.5001H16.6667C17.125 17.5001 17.5 17.1251 17.5 16.6667V10.0001L15.7667 5.00841ZM6.25 13.3334C5.55833 13.3334 5 12.7751 5 12.0834C5 11.3917 5.55833 10.8334 6.25 10.8334C6.94167 10.8334 7.5 11.3917 7.5 12.0834C7.5 12.7751 6.94167 13.3334 6.25 13.3334ZM13.75 13.3334C13.0583 13.3334 12.5 12.7751 12.5 12.0834C12.5 11.3917 13.0583 10.8334 13.75 10.8334C14.4417 10.8334 15 11.3917 15 12.0834C15 12.7751 14.4417 13.3334 13.75 13.3334ZM4.84167 8.33341L5.70833 5.83341H14.2833L15.15 8.33341H4.84167Z"
        fill={color}
      />
    </svg>
  );
};

const ArrowDown = ({
  size = "20px",
  color = colorSet.secondaryText,
}: IconsProps) => {
  return (
    <svg
      width="16"
      height="21"
      viewBox="0 0 16 21"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M7.29289 20.7071C7.68342 21.0976 8.31658 21.0976 8.70711 20.7071L15.0711 14.3431C15.4616 13.9526 15.4616 13.3195 15.0711 12.9289C14.6805 12.5384 14.0474 12.5384 13.6569 12.9289L8 18.5858L2.34315 12.9289C1.95262 12.5384 1.31946 12.5384 0.928933 12.9289C0.538408 13.3195 0.538408 13.9526 0.928933 14.3431L7.29289 20.7071ZM7 4.37114e-08L7 20L9 20L9 -4.37114e-08L7 4.37114e-08Z"
        fill={color}
      />
    </svg>
  );
};

const Group = ({
  size = "20px",
  color = colorSet.secondaryText,
}: IconsProps) => {
  return (
    <svg
      width={size}
      height={size}
      viewBox="0 0 16 16"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M10.772 5.48865C10.772 7.0551 9.52326 8.31115 7.96586 8.31115C6.40845 8.31115 5.15966 7.0551 5.15966 5.48865C5.15966 3.92159 6.40845 2.66675 7.96586 2.66675C9.52326 2.66675 10.772 3.92159 10.772 5.48865ZM7.96586 13.3334C5.6784 13.3334 3.72523 12.9708 3.72523 11.5202C3.72523 10.069 5.66587 9.69316 7.96586 9.69316C10.2533 9.69316 12.2065 10.0558 12.2065 11.507C12.2065 12.9576 10.2658 13.3334 7.96586 13.3334ZM11.9712 5.53956C11.9712 6.3381 11.7331 7.082 11.3152 7.70042C11.2722 7.76406 11.3104 7.84992 11.3862 7.86313C11.4907 7.88114 11.5987 7.89135 11.7086 7.89435C12.804 7.92317 13.7871 7.21409 14.0587 6.14657C14.461 4.5609 13.2797 3.13735 11.7754 3.13735C11.6119 3.13735 11.4555 3.15476 11.3033 3.18598C11.2824 3.19078 11.2603 3.20039 11.2483 3.219C11.234 3.24182 11.2448 3.27244 11.2591 3.29225C11.711 3.92928 11.9712 4.7062 11.9712 5.53956ZM13.7853 9.00846C14.5213 9.15316 15.0055 9.44856 15.206 9.87785C15.3756 10.2303 15.3756 10.6392 15.206 10.991C14.8992 11.6568 13.9101 11.8706 13.5257 11.9258C13.4463 11.9378 13.3824 11.8688 13.3907 11.7889C13.5871 9.94389 12.025 9.0691 11.6208 8.86797C11.6035 8.85896 11.5999 8.84515 11.6017 8.83674C11.6029 8.83074 11.6101 8.82113 11.6232 8.81933C12.4977 8.80312 13.4379 8.9232 13.7853 9.00846ZM4.29124 7.89429C4.40108 7.89129 4.50853 7.88168 4.61359 7.86307C4.6894 7.84986 4.7276 7.764 4.68462 7.70036C4.26677 7.08194 4.02859 6.33804 4.02859 5.5395C4.02859 4.70614 4.28886 3.92922 4.74074 3.29219C4.75506 3.27238 4.76521 3.24176 4.75148 3.21894C4.73954 3.20093 4.71686 3.19072 4.69656 3.18592C4.54375 3.1547 4.38735 3.13729 4.22379 3.13729C2.71951 3.13729 1.53818 4.56084 1.94111 6.14651C2.21272 7.21403 3.19587 7.92311 4.29124 7.89429ZM4.3978 8.83638C4.39959 8.84539 4.39601 8.8586 4.37929 8.86821C3.97457 9.06934 2.41239 9.94413 2.60878 11.7886C2.61714 11.869 2.55386 11.9375 2.47447 11.9261C2.09005 11.8708 1.10092 11.6571 0.794099 10.9912C0.623972 10.6388 0.623972 10.2305 0.794099 9.87809C0.994669 9.4488 1.47819 9.1534 2.21421 9.0081C2.56222 8.92344 3.5018 8.80336 4.3769 8.81957C4.39004 8.82137 4.3966 8.83098 4.3978 8.83638Z"
        fill={color}
      />
    </svg>
  );
};

const RightArrow = ({ size = "20px", color = "#252525" }: IconsProps) => {
  return (
    <svg
      height={size}
      viewBox="0 0 19 20"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path d="M12.3503 16L6.65028 10L12.3503 4" stroke={color} />
    </svg>
  );
};

const Check = ({ size = "20px", color = "white" }: IconsProps) => {
  return (
    <svg
      width={size}
      viewBox="0 0 18 18"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M6.74968 12.1502L3.59968 9.0002L2.54968 10.0502L6.74968 14.2502L15.7497 5.2502L14.6997 4.2002L6.74968 12.1502Z"
        fill={color}
      />
    </svg>
  );
};

Icons.Safe = Safe;
Icons.Caution = Caution;
Icons.Threat = Threat;
Icons.Camera = Camera;
Icons.Location = Location;
Icons.MyLocation = MyLocation;
Icons.OtherLocation = OtherLocation;
Icons.Navigation = Navigation;
Icons.Knife = Knife;
Icons.CloseThin = CloseThin;
Icons.CloseThick = CloseThick;
Icons.Car = Car;
Icons.ArrowDown = ArrowDown;
Icons.Group = Group;
Icons.RightArrow = RightArrow;

export default Icons;
